# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//ark/ts2abc/ts2panda/ts2abc_config.gni")
import("//build/ohos.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

config("ace_utils_config") {
  include_dirs = [ "//utils/native/base/include" ]
}

# build javascript sdk library
template("js_framework") {
  # get is_ohos_platform, use_quickjs_engine flag.
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines

    deps = [
      "$ace_flutter_engine_root:ace_skia_$platform",
      "$ace_root/frameworks/base:ace_base_$platform",
      "$ace_root/frameworks/core:ace_core_$platform",
      "$ace_root/frameworks/core/accessibility:ace_accessibility_$platform",
      "$ace_root/frameworks/core/components/theme:build_theme_code",
    ]

    # add common source file needed by all product platform here
    sources = [
      # codec
      "codec/byte_buffer_operator.cpp",
      "codec/standard_codec_buffer_operator.cpp",
      "codec/standard_function_codec.cpp",

      # dom
      "common/dom/dom_badge.cpp",
      "common/dom/dom_button.cpp",
      "common/dom/dom_calendar.cpp",
      "common/dom/dom_canvas.cpp",
      "common/dom/dom_chart.cpp",
      "common/dom/dom_clock.cpp",
      "common/dom/dom_dialog.cpp",
      "common/dom/dom_div.cpp",
      "common/dom/dom_divider.cpp",
      "common/dom/dom_document.cpp",
      "common/dom/dom_form.cpp",
      "common/dom/dom_grid_column.cpp",
      "common/dom/dom_grid_container.cpp",
      "common/dom/dom_grid_row.cpp",
      "common/dom/dom_image.cpp",
      "common/dom/dom_image_animator.cpp",
      "common/dom/dom_input.cpp",
      "common/dom/dom_label.cpp",
      "common/dom/dom_list.cpp",
      "common/dom/dom_list_item.cpp",
      "common/dom/dom_list_item_group.cpp",
      "common/dom/dom_marquee.cpp",
      "common/dom/dom_navigation_bar.cpp",
      "common/dom/dom_node.cpp",
      "common/dom/dom_panel.cpp",
      "common/dom/dom_picker_base.cpp",
      "common/dom/dom_picker_view.cpp",
      "common/dom/dom_progress.cpp",
      "common/dom/dom_proxy.cpp",
      "common/dom/dom_qrcode.cpp",
      "common/dom/dom_refresh.cpp",
      "common/dom/dom_search.cpp",
      "common/dom/dom_slider.cpp",
      "common/dom/dom_span.cpp",
      "common/dom/dom_stack.cpp",
      "common/dom/dom_svg.cpp",
      "common/dom/dom_svg_animate.cpp",
      "common/dom/dom_svg_animate_motion.cpp",
      "common/dom/dom_svg_animate_transform.cpp",
      "common/dom/dom_svg_base.cpp",
      "common/dom/dom_svg_circle.cpp",
      "common/dom/dom_svg_ellipse.cpp",
      "common/dom/dom_svg_line.cpp",
      "common/dom/dom_svg_mask.cpp",
      "common/dom/dom_svg_path.cpp",
      "common/dom/dom_svg_polygon.cpp",
      "common/dom/dom_svg_polyline.cpp",
      "common/dom/dom_svg_rect.cpp",
      "common/dom/dom_svg_text.cpp",
      "common/dom/dom_svg_text_path.cpp",
      "common/dom/dom_svg_tspan.cpp",
      "common/dom/dom_swiper.cpp",
      "common/dom/dom_switch.cpp",
      "common/dom/dom_tab_bar.cpp",
      "common/dom/dom_tab_content.cpp",
      "common/dom/dom_tabs.cpp",
      "common/dom/dom_text.cpp",
      "common/dom/dom_textarea.cpp",
      "common/dom/dom_toggle.cpp",
      "common/dom/dom_type.cpp",
      "common/dom/input/dom_button_util.cpp",
      "common/dom/input/dom_checkbox_util.cpp",
      "common/dom/input/dom_radio_util.cpp",
      "common/dom/input/dom_textfield_util.cpp",

      # card frontend
      "card_frontend/card_frontend.cpp",
      "card_frontend/card_frontend_delegate.cpp",
      "card_frontend/js_card_parser.cpp",

      # js frontend
      "js_frontend/engine/common/base_animation_bridge.cpp",
      "js_frontend/engine/common/js_api_perf.cpp",
      "js_frontend/engine/common/js_constants.cpp",
      "js_frontend/frontend_delegate.cpp",
      "js_frontend/frontend_delegate_impl.cpp",
      "js_frontend/js_ace_page.cpp",
      "js_frontend/js_command.cpp",
      "js_frontend/js_frontend.cpp",

      # manifest
      "common/manifest/manifest_appinfo.cpp",
      "common/manifest/manifest_parser.cpp",
      "common/manifest/manifest_router.cpp",
      "common/manifest/manifest_widget.cpp",
      "common/manifest/manifest_window.cpp",

      # media query
      "common/media_query/media_query_info.cpp",
      "common/media_query/media_queryer.cpp",

      #plugin adapter
      "common/plugin_adapter/plugin_bridge.cpp",

      # utils
      "common/utils/source_map.cpp",
      "common/utils/transform_convertor.cpp",
      "common/utils/utils.cpp",

      # declarative js
      "declarative_frontend/declarative_frontend.cpp",
      "declarative_frontend/frontend_delegate_declarative.cpp",

      # pa backend
      "pa_backend/backend_delegate_impl.cpp",
      "pa_backend/pa_backend.cpp",
    ]

    include_dirs = [
      "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_dataability/include",
      "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_rdb/include",
      "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    ]

    # add sources needed by phone and TV. wearable like watch do not need them
    if (!is_wearable_product) {
      sources += [
        "common/dom/dom_camera.cpp",
        "common/dom/dom_menu.cpp",
        "common/dom/dom_navigation_menu.cpp",
        "common/dom/dom_option.cpp",
        "common/dom/dom_picker_dialog.cpp",
        "common/dom/dom_piece.cpp",
        "common/dom/dom_popup.cpp",
        "common/dom/dom_rating.cpp",
        "common/dom/dom_select.cpp",
        "common/dom/dom_stepper.cpp",
        "common/dom/dom_stepper_item.cpp",
        "common/dom/dom_tool_bar.cpp",
        "common/dom/dom_tool_bar_item.cpp",
        "common/dom/dom_video.cpp",
      ]
    }

    # add sources needed by phone and TV. wearable like watch do not need them
    if (!is_wearable_product && !use_mingw_win && !use_mac) {
      sources += [
        "common/dom/dom_rich_text.cpp",
        "common/dom/dom_web.cpp",
        "common/dom/dom_xcomponent.cpp",
      ]
    }

    if (!is_wearable_product && !use_mingw_win && !use_mac) {
      sources += [
        "js_frontend/engine/common/js_engine_loader.cpp",
        "pa_backend/engine/common/js_backend_engine_loader.cpp",
      ]
    }

    configs = [
      "$ace_root:ace_config",
      ":ace_utils_config",
    ]

    if (is_ohos_platform) {
      if (is_standard_system) {
        sources += [ "common/accessibility/fake_accessibility_manager.cpp" ]
        sources +=
            [ "common/accessibility/fake_accessibility_node_manager.cpp" ]
        deps += [
          "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
          "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
        ]
        external_deps = [
          "aafwk_standard:ability_manager",
          "aafwk_standard:want",
          "appexecfwk_standard:appexecfwk_base",
          "appexecfwk_standard:appexecfwk_core",
          "ipc:ipc_core",
          "native_appdatamgr:native_dataability",
          "native_appdatamgr:native_rdb",
        ]
      }
    } else if (use_mingw_win) {
      sources += [
        "common/accessibility/accessibility_node_manager.cpp",
        "common/inspector/inspect_badge.cpp",
        "common/inspector/inspect_button.cpp",
        "common/inspector/inspect_canvas.cpp",
        "common/inspector/inspect_chart.cpp",
        "common/inspector/inspect_dialog.cpp",
        "common/inspector/inspect_div.cpp",
        "common/inspector/inspect_divider.cpp",
        "common/inspector/inspect_form.cpp",
        "common/inspector/inspect_grid_column.cpp",
        "common/inspector/inspect_grid_container.cpp",
        "common/inspector/inspect_grid_row.cpp",
        "common/inspector/inspect_image.cpp",
        "common/inspector/inspect_image_animator.cpp",
        "common/inspector/inspect_input.cpp",
        "common/inspector/inspect_label.cpp",
        "common/inspector/inspect_list.cpp",
        "common/inspector/inspect_list_item.cpp",
        "common/inspector/inspect_list_item_group.cpp",
        "common/inspector/inspect_marquee.cpp",
        "common/inspector/inspect_menu.cpp",
        "common/inspector/inspect_node.cpp",
        "common/inspector/inspect_option.cpp",
        "common/inspector/inspect_panel.cpp",
        "common/inspector/inspect_picker.cpp",
        "common/inspector/inspect_picker_view.cpp",
        "common/inspector/inspect_piece.cpp",
        "common/inspector/inspect_popup.cpp",
        "common/inspector/inspect_progress.cpp",
        "common/inspector/inspect_qrcode.cpp",
        "common/inspector/inspect_rating.cpp",
        "common/inspector/inspect_refresh.cpp",
        "common/inspector/inspect_search.cpp",
        "common/inspector/inspect_select.cpp",
        "common/inspector/inspect_slider.cpp",
        "common/inspector/inspect_span.cpp",
        "common/inspector/inspect_stack.cpp",
        "common/inspector/inspect_stepper.cpp",
        "common/inspector/inspect_stepper_item.cpp",
        "common/inspector/inspect_swiper.cpp",
        "common/inspector/inspect_switch.cpp",
        "common/inspector/inspect_tab_bar.cpp",
        "common/inspector/inspect_tab_content.cpp",
        "common/inspector/inspect_tabs.cpp",
        "common/inspector/inspect_text.cpp",
        "common/inspector/inspect_textarea.cpp",
        "common/inspector/inspect_toggle.cpp",
        "common/inspector/inspect_toolbar.cpp",
        "common/inspector/inspect_toolbar_item.cpp",
        "common/inspector/inspect_video.cpp",
        "common/inspector/inspector_client.cpp",
        "common/inspector/js_inspector_manager.cpp",
      ]
      defines += [ "_USE_MATH_DEFINES" ]
      cflags = [ "-std=c++17" ]
    } else if (use_mac) {
      sources += [
        "common/accessibility/accessibility_node_manager.cpp",
        "common/inspector/inspect_button.cpp",
        "common/inspector/inspect_canvas.cpp",
        "common/inspector/inspect_chart.cpp",
        "common/inspector/inspect_dialog.cpp",
        "common/inspector/inspect_div.cpp",
        "common/inspector/inspect_divider.cpp",
        "common/inspector/inspect_image.cpp",
        "common/inspector/inspect_image_animator.cpp",
        "common/inspector/inspect_input.cpp",
        "common/inspector/inspect_label.cpp",
        "common/inspector/inspect_list.cpp",
        "common/inspector/inspect_list_item.cpp",
        "common/inspector/inspect_list_item_group.cpp",
        "common/inspector/inspect_marquee.cpp",
        "common/inspector/inspect_menu.cpp",
        "common/inspector/inspect_node.cpp",
        "common/inspector/inspect_option.cpp",
        "common/inspector/inspect_picker.cpp",
        "common/inspector/inspect_picker_view.cpp",
        "common/inspector/inspect_popup.cpp",
        "common/inspector/inspect_progress.cpp",
        "common/inspector/inspect_rating.cpp",
        "common/inspector/inspect_refresh.cpp",
        "common/inspector/inspect_search.cpp",
        "common/inspector/inspect_select.cpp",
        "common/inspector/inspect_slider.cpp",
        "common/inspector/inspect_span.cpp",
        "common/inspector/inspect_stack.cpp",
        "common/inspector/inspect_swiper.cpp",
        "common/inspector/inspect_switch.cpp",
        "common/inspector/inspect_tab_bar.cpp",
        "common/inspector/inspect_tab_content.cpp",
        "common/inspector/inspect_tabs.cpp",
        "common/inspector/inspect_text.cpp",
        "common/inspector/inspect_textarea.cpp",
        "common/inspector/inspect_video.cpp",
        "common/inspector/inspector_client.cpp",
        "common/inspector/js_inspector_manager.cpp",
      ]
      cflags = [ "-std=c++17" ]
    }
  }
}

js_framework("js_framework_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  platform = "ohos"
}

ohos_static_library("intl_qjs_preview") {
  include_dirs = [ "$ace_root" ]
  sources = [ "js_frontend/engine/quickjs/intl/intl_support.cpp" ]
}

ohos_shared_library("intl_qjs") {
  include_dirs = [ "$ace_root" ]
  sources = [ "js_frontend/engine/quickjs/intl/intl_support.cpp" ]
  subsystem_name = "ace"
  if (is_standard_system) {
    part_name = "ace_engine_standard"
  }
}

# build javascript engine library
template("js_engine") {
  # get is_ohos_platform, use_quickjs_engine flag.
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    deps = []
    configs = []
    sources = []

    #add quickjs engine support
    if (use_quickjs_engine) {
      deps += [ "//third_party/jsframework:jsf" ]

      if (use_js_debug) {
        deps += [ "//third_party/quickjs:qjs_debugger" ]
        defines += [ "ENABLE_JS_DEBUG" ]
        configs += [ "//third_party/quickjs:qjs_debug_config" ]
      } else {
        deps += [ "//third_party/quickjs:qjs" ]
      }

      sources += [
        #runtime
        "js_frontend/engine/quickjs/animation_bridge.cpp",
        "js_frontend/engine/quickjs/animator_bridge.cpp",
        "js_frontend/engine/quickjs/badge_bridge.cpp",
        "js_frontend/engine/quickjs/canvas_bridge.cpp",
        "js_frontend/engine/quickjs/chart_bridge.cpp",
        "js_frontend/engine/quickjs/clock_bridge.cpp",
        "js_frontend/engine/quickjs/component_api_bridge.cpp",
        "js_frontend/engine/quickjs/image_animator_bridge.cpp",
        "js_frontend/engine/quickjs/list_bridge.cpp",
        "js_frontend/engine/quickjs/offscreen_canvas_bridge.cpp",
        "js_frontend/engine/quickjs/qjs_engine.cpp",
        "js_frontend/engine/quickjs/qjs_engine_loader.cpp",
        "js_frontend/engine/quickjs/qjs_group_js_bridge.cpp",
        "js_frontend/engine/quickjs/stepper_bridge.cpp",

        # utils
        "js_frontend/engine/quickjs/qjs_utils.cpp",
      ]
      include_dirs = [
        "//foundation/ace/napi",
        "//foundation/ace/napi/native_engine/impl/quickjs",
        "//third_party/libuv/include",
        "//third_party/quickjs",
        "//utils/native/base/include",
      ]
      deps += [ "//foundation/ace/napi:ace_napi_quickjs" ]

      # external_deps = [ "jsapi:worker_init" ]  wait for ccruntime
    }

    # add ark engine support
    if (use_ark_engine) {
      if (target_cpu == "arm64") {
        defines += [
          "APP_USE_ARM64",
          "PREBUILD_ARK_RUNTIME",
        ]
      } else if (target_cpu == "arm") {
        defines += [
          "APP_USE_ARM",
          "PREBUILD_ARK_RUNTIME",
        ]
      }

      # deps += [ "//third_party/jsframework:ark_build" ]

      configs += [
        "//ark/runtime_core/libpandabase:arkbase_public_config",
        "//ark/js_runtime:ark_jsruntime_public_config",
      ]

      sources += [
        "js_frontend/engine/jsi/ark_js_runtime.cpp",
        "js_frontend/engine/jsi/ark_js_value.cpp",
        "js_frontend/engine/jsi/jsi_animation_bridge.cpp",
        "js_frontend/engine/jsi/jsi_animator_bridge.cpp",
        "js_frontend/engine/jsi/jsi_badge_bridge.cpp",
        "js_frontend/engine/jsi/jsi_canvas_bridge.cpp",
        "js_frontend/engine/jsi/jsi_chart_bridge.cpp",
        "js_frontend/engine/jsi/jsi_clock_bridge.cpp",
        "js_frontend/engine/jsi/jsi_component_api_bridge.cpp",
        "js_frontend/engine/jsi/jsi_engine.cpp",
        "js_frontend/engine/jsi/jsi_engine_loader.cpp",
        "js_frontend/engine/jsi/jsi_group_js_bridge.cpp",
        "js_frontend/engine/jsi/jsi_image_animator_bridge.cpp",
        "js_frontend/engine/jsi/jsi_input_bridge.cpp",
        "js_frontend/engine/jsi/jsi_list_bridge.cpp",
        "js_frontend/engine/jsi/jsi_offscreen_canvas_bridge.cpp",
        "js_frontend/engine/jsi/jsi_stepper_bridge.cpp",
        "js_frontend/engine/jsi/jsi_utils.cpp",
      ]
      deps += [
        "//ark/js_runtime:libark_jsruntime",
        "//foundation/ace/napi:ace_napi_ark",
      ]
    }

    configs += [ "$ace_root:ace_config" ]

    print("platform: ${platform}")

    if (is_ohos_platform) {
      if (!is_wearable_product) {
        deps += [ "$ace_root/adapter/common/cpp:libace" ]
      } else {
        deps += [ ":js_framework_$platform" ]
        defines += [ "BUILT_IN_JS_ENGINE" ]
      }
      deps += [ ":intl_qjs" ]
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }

    if (use_mingw_win || use_mac) {
      deps += [
        ":intl_qjs_preview",
        ":js_framework_$platform",
      ]

      defines += [ "_USE_MATH_DEFINES" ]
      defines += [ "BUILT_IN_JS_ENGINE" ]
      cflags = [ "-std=c++17" ]
    }
  }
}

js_engine("js_engine_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = true
  use_ark_engine = false
  platform = "ohos"
}

js_engine("js_engine_debug_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = true
  use_js_debug = true
  use_ark_engine = false
  platform = "ohos"
}

js_engine("js_engine_windows") {
  defines = ace_windows_defines
  is_ohos_platform = false
  use_quickjs_engine = true
  use_ark_engine = false
  platform = "windows"
}

js_engine("js_engine_mac") {
  defines = ace_mac_defines
  is_ohos_platform = false
  use_quickjs_engine = true
  use_ark_engine = false
  platform = "mac"
}

js_engine("js_engine_ark_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = false
  use_ark_engine = true
  platform = "ohos"
}

template("gen_obj") {
  name = target_name
  action("gen_obj_" + name) {
    visibility = [ ":*" ]  # Only targets in this file can depend on this.

    if (use_mingw_win) {
      objcopy_tool = objcopy_mingw
      script = "$flutter_root/engine/flutter/sky/tools/objcopy_pc_mac.py"
    } else if (use_mac) {
      objcopy_tool = objcopy_clang
      script = "declarative_frontend/engine/tools/build_resource_to_bytecode.py"
    } else if (target_cpu == "x86_64") {
      objcopy_tool = objcopy_x86_64
      script = "$flutter_root/engine/flutter/sky/tools/objcopy.py"
    } else {
      objcopy_tool = objcopy_aarch64
      script = "$flutter_root/engine/flutter/sky/tools/objcopy.py"
    }

    args = [
      "--objcopy",
      rebase_path(objcopy_tool),
      "--input",
      rebase_path(invoker.input),
      "--output",
      rebase_path(invoker.output),
      "--arch",
      current_cpu,
    ]

    deps = []
    deps += invoker.snapshot_dep

    inputs = [ invoker.input ]
    outputs = [ invoker.output ]
  }

  source_set("gen_obj_src_" + name) {
    sources = [ invoker.output ]
    deps = [ ":gen_obj_" + name ]
  }
}

base_output_path = get_label_info(":js_proxyclass", "target_out_dir")
jsproxyclass_obj_path = base_output_path + "/js_proxy_class.o"
base_output_path = get_label_info(":js_enumstyle", "target_out_dir")
jsenumstyle_obj_path = base_output_path + "/js_enum_style.o"
base_output_path = get_label_info(":js_mocksystemplugin", "target_out_dir")
jsmocksystemplugin_obj_path = base_output_path + "/js_mock_system_plugin.o"
abcproxyclass_obj_path = base_output_path + "/abc_proxy_class.o"
abcenumstyle_obj_path = base_output_path + "/abc_enum_style.o"

gen_obj("js_proxyclass") {
  input = "declarative_frontend/engine/stateMgmt.js"
  if (use_mac) {
    jsproxyclass_obj_path = base_output_path + "/js_proxy_class.c"
  }
  output = jsproxyclass_obj_path
  snapshot_dep = []
}

gen_obj("js_enum_style") {
  input = "declarative_frontend/engine/jsEnumStyle.js"
  if (use_mac) {
    jsenumstyle_obj_path = base_output_path + "/js_enum_style.c"
  }
  output = jsenumstyle_obj_path
  snapshot_dep = []
}

# compile stateMgmt.js, jsEnumStyle.js to stateMgmt.abc, jsEnumStyle.abc.
action("gen_stateMgmt_abc") {
  visibility = [ ":*" ]

  deps = [ "//ark/ts2abc/ts2panda:ark_ts2abc_build" ]

  script = "//ark/ts2abc/ts2panda/scripts/generate_js_bytecode.py"

  args = [
    "--src-js",
    rebase_path(
        "//foundation/ace/ace_engine/frameworks/bridge/declarative_frontend/engine/stateMgmt.js"),
    "--dst-file",
    rebase_path(base_output_path + "/stateMgmt.abc"),
    "--node",
    rebase_path("${node_path}"),
    "--frontend-tool-path",
    rebase_path("${ts2abc_build_path}"),
    "--node-modules",
    rebase_path("${node_modules}"),
  ]

  inputs = [ "//foundation/ace/ace_engine/frameworks/bridge/declarative_frontend/engine/stateMgmt.js" ]
  outputs = [ base_output_path + "/stateMgmt.abc" ]
}

action("gen_jsEnumStyle_abc") {
  visibility = [ ":*" ]

  deps = [ "//ark/ts2abc/ts2panda:ark_ts2abc_build" ]

  script = "//ark/ts2abc/ts2panda/scripts/generate_js_bytecode.py"

  args = [
    "--src-js",
    rebase_path(
        "//foundation/ace/ace_engine/frameworks/bridge/declarative_frontend/engine/jsEnumStyle.js"),
    "--dst-file",
    rebase_path(base_output_path + "/jsEnumStyle.abc"),
    "--node",
    rebase_path("${node_path}"),
    "--frontend-tool-path",
    rebase_path("${ts2abc_build_path}"),
    "--node-modules",
    rebase_path("${node_modules}"),
  ]

  inputs = [ "//foundation/ace/ace_engine/frameworks/bridge/declarative_frontend/engine/jsEnumStyle.js" ]
  outputs = [ base_output_path + "/jsEnumStyle.abc" ]
}

gen_obj("abc_proxyclass") {
  input = base_output_path + "/stateMgmt.abc"
  output = abcproxyclass_obj_path
  snapshot_dep = [ ":gen_stateMgmt_abc" ]
}

gen_obj("abc_enum_style") {
  input = base_output_path + "/jsEnumStyle.abc"
  output = abcenumstyle_obj_path
  snapshot_dep = [ ":gen_jsEnumStyle_abc" ]
}

gen_obj("js_mock_system_plugin") {
  input = "declarative_frontend/engine/quickjs/jsMockSystemPlugin.js"
  if (use_mac) {
    jsmocksystemplugin_obj_path = base_output_path + "/js_mock_system_plugin.c"
  }
  output = jsmocksystemplugin_obj_path
  snapshot_dep = []
}

# build declarative javascript engine library
template("declarative_js_engine") {
  # get is_ohos_platform, use_quickjs_engine flag.
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    deps = []
    configs = []
    is_separated_so = is_ohos_platform && !is_wearable_product

    sources = [
      "declarative_frontend/engine/declarative_engine_loader.cpp",
      "declarative_frontend/engine/functions/js_animator_function.cpp",
      "declarative_frontend/engine/functions/js_click_function.cpp",
      "declarative_frontend/engine/functions/js_drag_function.cpp",
      "declarative_frontend/engine/functions/js_foreach_function.cpp",
      "declarative_frontend/engine/functions/js_function.cpp",
      "declarative_frontend/engine/functions/js_gesture_function.cpp",
      "declarative_frontend/engine/functions/js_key_function.cpp",
      "declarative_frontend/engine/functions/js_page_transition_function.cpp",
      "declarative_frontend/engine/functions/js_pan_function.cpp",
      "declarative_frontend/engine/functions/js_touch_function.cpp",
      "declarative_frontend/engine/js_types.cpp",
      "declarative_frontend/jsview/dialog/js_alert_dialog.cpp",
      "declarative_frontend/jsview/dialog/js_custom_dialog_controller.cpp",
      "declarative_frontend/jsview/js_ability_component.cpp",
      "declarative_frontend/jsview/js_ability_component_controller.cpp",
      "declarative_frontend/jsview/js_animator.cpp",
      "declarative_frontend/jsview/js_badge.cpp",
      "declarative_frontend/jsview/js_blank.cpp",
      "declarative_frontend/jsview/js_button.cpp",
      "declarative_frontend/jsview/js_calendar.cpp",
      "declarative_frontend/jsview/js_calendar_controller.cpp",
      "declarative_frontend/jsview/js_circle.cpp",
      "declarative_frontend/jsview/js_column.cpp",
      "declarative_frontend/jsview/js_column_split.cpp",
      "declarative_frontend/jsview/js_container_base.cpp",
      "declarative_frontend/jsview/js_counter.cpp",
      "declarative_frontend/jsview/js_data_panel.cpp",
      "declarative_frontend/jsview/js_datepicker.cpp",
      "declarative_frontend/jsview/js_divider.cpp",
      "declarative_frontend/jsview/js_ellipse.cpp",
      "declarative_frontend/jsview/js_environment.cpp",
      "declarative_frontend/jsview/js_flex.cpp",
      "declarative_frontend/jsview/js_flex_impl.cpp",
      "declarative_frontend/jsview/js_foreach.cpp",
      "declarative_frontend/jsview/js_gauge.cpp",
      "declarative_frontend/jsview/js_gesture.cpp",
      "declarative_frontend/jsview/js_grid.cpp",
      "declarative_frontend/jsview/js_grid_container.cpp",
      "declarative_frontend/jsview/js_grid_item.cpp",
      "declarative_frontend/jsview/js_if_else.cpp",
      "declarative_frontend/jsview/js_image.cpp",
      "declarative_frontend/jsview/js_image_animator.cpp",
      "declarative_frontend/jsview/js_indexer.cpp",
      "declarative_frontend/jsview/js_interactable_view.cpp",
      "declarative_frontend/jsview/js_lazy_foreach.cpp",
      "declarative_frontend/jsview/js_line.cpp",
      "declarative_frontend/jsview/js_list.cpp",
      "declarative_frontend/jsview/js_list_item.cpp",
      "declarative_frontend/jsview/js_loading_progress.cpp",
      "declarative_frontend/jsview/js_navigation_view.cpp",
      "declarative_frontend/jsview/js_navigator.cpp",
      "declarative_frontend/jsview/js_page_transition.cpp",
      "declarative_frontend/jsview/js_path.cpp",
      "declarative_frontend/jsview/js_persistent.cpp",
      "declarative_frontend/jsview/js_polygon.cpp",
      "declarative_frontend/jsview/js_polyline.cpp",
      "declarative_frontend/jsview/js_progress.cpp",
      "declarative_frontend/jsview/js_qrcode.cpp",
      "declarative_frontend/jsview/js_radio.cpp",
      "declarative_frontend/jsview/js_rect.cpp",
      "declarative_frontend/jsview/js_row.cpp",
      "declarative_frontend/jsview/js_row_split.cpp",
      "declarative_frontend/jsview/js_scroll.cpp",
      "declarative_frontend/jsview/js_scroller.cpp",
      "declarative_frontend/jsview/js_shape.cpp",
      "declarative_frontend/jsview/js_shape_abstract.cpp",
      "declarative_frontend/jsview/js_slider.cpp",
      "declarative_frontend/jsview/js_sliding_panel.cpp",
      "declarative_frontend/jsview/js_span.cpp",
      "declarative_frontend/jsview/js_stack.cpp",
      "declarative_frontend/jsview/js_swiper.cpp",
      "declarative_frontend/jsview/js_tab_content.cpp",
      "declarative_frontend/jsview/js_tabs.cpp",
      "declarative_frontend/jsview/js_tabs_controller.cpp",
      "declarative_frontend/jsview/js_text.cpp",
      "declarative_frontend/jsview/js_textarea.cpp",
      "declarative_frontend/jsview/js_textinput.cpp",
      "declarative_frontend/jsview/js_textpicker.cpp",
      "declarative_frontend/jsview/js_toggle.cpp",
      "declarative_frontend/jsview/js_touch_handler.cpp",
      "declarative_frontend/jsview/js_utils.cpp",
      "declarative_frontend/jsview/js_view.cpp",
      "declarative_frontend/jsview/js_view_abstract.cpp",
      "declarative_frontend/jsview/js_view_context.cpp",
      "declarative_frontend/sharedata/js_share_data.cpp",
      "declarative_frontend/view_stack_processor.cpp",
    ]

    if (!is_wearable_product) {
      sources += [
        "declarative_frontend/jsview/js_camera.cpp",
        "declarative_frontend/jsview/js_form.cpp",
        "declarative_frontend/jsview/js_piece.cpp",
        "declarative_frontend/jsview/js_rating.cpp",
        "declarative_frontend/jsview/js_video.cpp",
        "declarative_frontend/jsview/js_video_controller.cpp",
      ]
    }

    if (is_standard_system) {
      public_deps =
          [ "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr" ]
    }

    #add quickjs engine support
    if (use_quickjs_engine) {
      defines += [ "USE_QUICKJS_ENGINE" ]
      defines += [ "ACE_CACHE_PATH=\"\"" ]

      #shoule build qjs anytime, when use_quickjs_engine is true
      if (is_separated_so || use_mingw_win || use_mac) {
        deps += [ "//third_party/quickjs:qjs" ]
        include_dirs = [ "//foundation/ace/napi" ]
      }
      deps += [ "//foundation/ace/napi:ace_napi_quickjs" ]
      deps += [ "//foundation/ace/napi:ace_napi" ]

      # external_deps = [ "jsapi:worker_init" ] wait for ccruntime

      sources += [
        "declarative_frontend/engine/quickjs/modules/qjs_curves_module.cpp",
        "declarative_frontend/engine/quickjs/modules/qjs_matrix4_module.cpp",
        "declarative_frontend/engine/quickjs/modules/qjs_module_manager.cpp",
        "declarative_frontend/engine/quickjs/modules/qjs_router_module.cpp",
        "declarative_frontend/engine/quickjs/qjs_bindings.cpp",
        "declarative_frontend/engine/quickjs/qjs_declarative_engine.cpp",
        "declarative_frontend/engine/quickjs/qjs_declarative_engine_instance.cpp",
        "declarative_frontend/engine/quickjs/qjs_function_list_entries_container.cpp",
        "declarative_frontend/engine/quickjs/qjs_helpers.cpp",
        "declarative_frontend/engine/quickjs/qjs_object_template.cpp",
        "declarative_frontend/engine/quickjs/qjs_types.cpp",
        "declarative_frontend/engine/quickjs/qjs_unwrap_any.cpp",
        "declarative_frontend/engine/quickjs/qjs_view_register.cpp",
      ]

      deps += [ "//foundation/ace/napi:ace_napi_quickjs" ]

      if (is_separated_so) {
        sources += [
          "js_frontend/engine/quickjs/qjs_group_js_bridge.cpp",
          "js_frontend/engine/quickjs/qjs_utils.cpp",
        ]
      }
    }

    # add ark engine support
    if (use_ark_engine) {
      defines += [ "USE_ARK_ENGINE" ]
      if (target_cpu == "arm64") {
        defines += [ "APP_USE_ARM64" ]
      } else if (target_cpu == "arm") {
        defines += [ "APP_USE_ARM" ]
      }

      deps += [
        "//ark/js_runtime:libark_jsruntime",
        "//third_party/jsframework:ark_build",
      ]

      configs += [
        "//ark/runtime_core/libpandabase:arkbase_public_config",
        "//ark/js_runtime:ark_jsruntime_public_config",
      ]

      if (!use_mingw_win && !use_mac) {
        deps += [ "//foundation/ace/napi:ace_napi_ark" ]
        deps += [ "//foundation/ace/napi:ace_napi" ]

        # external_deps = [ "jsapi:worker_init" ]
      }

      include_dirs = [ "//foundation/ace/napi" ]

      deps += [
        ":gen_obj_src_abc_enum_style",
        ":gen_obj_src_abc_proxyclass",
      ]

      sources += [
        "declarative_frontend/engine/bindings_implementation.cpp",
        "declarative_frontend/engine/jsi/ark/ark_js_runtime.cpp",
        "declarative_frontend/engine/jsi/ark/ark_js_value.cpp",
        "declarative_frontend/engine/jsi/jsi_declarative_engine.cpp",
        "declarative_frontend/engine/jsi/jsi_declarative_utils.cpp",
        "declarative_frontend/engine/jsi/jsi_object_template.cpp",
        "declarative_frontend/engine/jsi/jsi_types.cpp",
        "declarative_frontend/engine/jsi/jsi_view_register.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_app_module.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_curves_module.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_matrix4_module.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_module_manager.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_router_module.cpp",
        "declarative_frontend/engine/jsi/modules/jsi_timer_module.cpp",
        "declarative_frontend/jsview/js_pan_handler.cpp",
      ]
    }

    configs += [ "$ace_root:ace_config" ]

    print("platform: ${platform}")

    if (is_separated_so) {
      deps += [ "$ace_root/adapter/common/cpp:libace" ]
    } else {
      deps += [ ":js_framework_$platform" ]
      defines += [ "BUILT_IN_JS_ENGINE" ]
    }
    if (is_ohos_platform) {
      deps += [
        ":gen_obj_src_js_proxyclass",
        ":intl_qjs",
      ]
    }

    deps += [
      ":gen_obj_src_js_enum_style",
      ":gen_obj_src_js_mock_system_plugin",
      ":gen_obj_src_js_proxyclass",
    ]

    if (use_mingw_win || use_mac) {
      deps += [
        ":intl_qjs_preview",
        ":js_framework_$platform",
      ]

      defines += [ "_USE_MATH_DEFINES" ]
      defines += [ "BUILT_IN_JS_ENGINE" ]
      cflags = [ "-std=c++17" ]
    }
  }
}

declarative_js_engine("declarative_js_engine_qjs_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = true
  use_ark_engine = false
  platform = "ohos"
}

declarative_js_engine("declarative_js_engine_ark_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = false
  use_ark_engine = true
  platform = "ohos"
}

# build servie backend javascript engine library
template("js_backend_engine") {
  # get is_ohos_platform, use_quickjs_engine flag.
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    deps = []
    configs = []
    sources = []
    external_deps = []

    #add quickjs engine support
    if (use_quickjs_engine) {
      deps += [ "//third_party/jsframework:jsf" ]

      if (use_js_debug) {
        deps += [ "//third_party/quickjs:qjs_debugger" ]
        defines += [ "ENABLE_JS_DEBUG" ]
        configs += [ "//third_party/quickjs:qjs_debug_config" ]
      } else {
        deps += [ "//third_party/quickjs:qjs" ]
      }

      sources += [
        #runtime
        "pa_backend/engine/quickjs/qjs_pa_engine.cpp",
        "pa_backend/engine/quickjs/qjs_pa_engine_loader.cpp",
      ]
      include_dirs = [
        "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_dataability/include",
        "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_rdb/include",
        "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
        "//foundation/aafwk/standard/services/common/include",
        "//foundation/aafwk/standard/interfaces/innerkits/want/include",
        "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/context",
        "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
        "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
        "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
        "//foundation/aafwk/standard/services/abilitymgr/include",
        "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common",
        "//foundation/aafwk/standard/services/common/include",
      ]
      deps += [
        "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
        "//foundation/aafwk/standard/interfaces/innerkits/base:base",
        "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common:napi_common",
        "//foundation/ace/napi:ace_napi",
        "//foundation/ace/napi:ace_napi_quickjs",
        "//foundation/appexecfwk/standard/kits:appkit_native",
        "//foundation/distributedschedule/dmsfwk/interfaces/innerkits/uri:zuri",
        "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
        "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
        "//utils/native/base:utils",
      ]
      external_deps += [
        "aafwk_standard:want",
        "appexecfwk_standard:appexecfwk_base",
        "appexecfwk_standard:appexecfwk_core",
        "appexecfwk_standard:libeventhandler",
        "ipc:ipc_core",
        "ipc_js:rpc",
        "napi:ace_napi",
        "samgr_L2:samgr_proxy",
      ]
    }

    configs += [ "$ace_root:ace_config" ]

    print("platform: ${platform}")

    if (is_ohos_platform) {
      if (!is_wearable_product) {
        deps += [ "$ace_root/adapter/common/cpp:libace" ]
      } else {
        deps += [ ":js_framework_$platform" ]
        defines += [ "BUILT_IN_JS_ENGINE" ]
      }
      deps += [ ":intl_qjs" ]
      if (is_standard_system) {
        external_deps += [
          "hiviewdfx_hilog_native:libhilog",
          "native_appdatamgr:native_dataability",
          "native_appdatamgr:native_rdb",
        ]
      }
    }

    if (use_mingw_win || use_mac) {
      deps += [
        ":intl_qjs_preview",
        ":js_framework_$platform",
      ]

      defines += [ "_USE_MATH_DEFINES" ]
      defines += [ "BUILT_IN_JS_ENGINE" ]
      cflags = [ "-std=c++17" ]
    }
  }
}

js_backend_engine("js_backend_engine_ohos") {
  defines = ace_ohos_defines
  is_ohos_platform = true
  use_quickjs_engine = true
  platform = "ohos"
}
