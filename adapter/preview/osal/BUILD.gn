# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

template("utilsecurec_source") {
  # get is_ohos_platform
  forward_variables_from(invoker, "*")
  ohos_source_set(target_name) {
    defines += invoker.defines
    sources = [ "//utils/native/base/src/securec/vsnprintf_s_p.c" ]
    if (platform == "windows") {
      sources += [
        "//utils/native/base/src/securec/memset_s.c",
        "//utils/native/base/src/securec/securecutil.c",
        "//utils/native/base/src/securec/secureinput_w.c",
        "//utils/native/base/src/securec/secureprintoutput_a.c",
        "//utils/native/base/src/securec/secureprintoutput_w.c",
      ]
      cflags = [ "-Wno-inconsistent-dllimport" ]
    }
    configs = [ "//utils/native/base:utils_config" ]
  }
}

utilsecurec_source("utilsecurec_source_windows") {
  defines = ace_windows_defines
  platform = "windows"
}

utilsecurec_source("utilsecurec_source_mac") {
  defines = ace_windows_defines
  platform = "mac"
}

# build static
template("ace_osal_preview_source_set") {
  # get is_ohos_platform
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines

    sources = [
      "$ace_root/adapter/common/cpp/file_asset_provider.cpp",
      "$ace_root/adapter/preview/entrance/flutter_task_executor.cpp",
      "$ace_root/adapter/preview/osal/ace_trace.cpp",
      "$ace_root/adapter/preview/osal/event_report.cpp",
      "$ace_root/adapter/preview/osal/log_wrapper.cpp",
      "$ace_root/adapter/preview/osal/system_properties.cpp",
    ]

    cflags_cc = [ "-DNAME_MAX=128" ]

    if (platform == "mac") {
      include_dirs = [ "//utils/native/base/include" ]
    }

    configs = [
      "$ace_root:ace_config",
      "$ace_flutter_engine_root:flutter_config",
    ]

    deps = [
      ":utilsecurec_source_$platform",
      "//third_party/zlib:libz",
    ]
  }
}

ace_osal_preview_source_set("ace_osal_windows") {
  defines = ace_windows_defines
  platform = "windows"
}

ace_osal_preview_source_set("ace_osal_mac") {
  defines = ace_mac_defines
  platform = "mac"
}
